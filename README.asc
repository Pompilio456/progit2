= Git Rebasing (Resabado)

en git, existen dos formas principales de integrar cambios de una rama a otra: el merge y el rebase.
En esta seccion usted parendera que es el rebasing,como hacerlo, por que es una herramienta increible,
y en que casos no debe usarse

Rebasado basico
si se devuelve a ejemplos anterioires en Merging basico. podra ver que ha divergido su trabajo 
y ha hecho commits en diferentes ramas

https://git-scm.com/book/en/v2/images/basic-rebase-1.png

figura 35: historia simple divergente

El camino mas facil para integrar las ramas, como hemos ya cubierto, es el comando merge.
este realiza unca combinacion de tres vias entre las dos ultimas instantaneas (C3 y C4)
y antecesor comun mas reciente (C2), creando una nueva instantanea (y commit).


https://git-scm.com/book/en/v2/images/basic-rebase-2.png


figura 36: Mezclar para integrar el historial de trabajo divergente

Sin embargo, hay otro camino: usted puede tomar el parche del cambio que ha introducido en C4
y reaplicarlo arria de C3. En git, esto es llamado Rebasing. Con el comando Rebase, puedes tener todos los cambios que fueron 
realizados (en commit) en una rama y reproducirlos en otra

En este ejemplo usted cdebe correr lo siguiente:

$ git checkout experiment
$ git rebase master

Primero, rebobine la cabeza para repetir su trabajo encima de ella
aplicar: comando escalonado a√±adido 

Esto funciona llendo al antecesor comun de las dos ramas (En la que usted se encuentra y la otra
que se esta rebasando), obeniendolas diferenciasintroducidas por cada commit de la rama en que 
usted se encuetra, guargando esas diferencias en archivos temporales, reiniciando la rama 
actual al mismo commit 

